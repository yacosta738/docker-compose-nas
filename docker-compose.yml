services:
  traefik:
    extends:
      service: traefik
      file: ./traefik/traefik-compose.yaml
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./sonarr:/config
      - ${DATA_ROOT}:/data
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.entrypoints=web,websecure
      - traefik.http.routers.sonarr.rule=(Host(`sonarr.${HOSTNAME}`))
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.routers.sonarr.tls.certresolver=cloudflare
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./radarr:/config
      - ${DATA_ROOT}:/data
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.entrypoints=web,websecure
      - traefik.http.routers.radarr.rule=(Host(`radarr.${HOSTNAME}`))
      - traefik.http.routers.radarr.tls=true
      - traefik.http.routers.radarr.tls.certresolver=cloudflare
      - traefik.http.services.radarr.loadbalancer.server.port=7878
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./bazarr:/config
      - ${DATA_ROOT}:/data
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.bazarr.entrypoints=web,websecure
      - traefik.http.routers.bazarr.rule=(Host(`bazarr.${HOSTNAME}`))
      - traefik.http.routers.bazarr.tls=true
      - traefik.http.services.bazarr.tls.certresolver=cloudflare
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./prowlarr:/config
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.entrypoints=web,websecure
      - traefik.http.routers.prowlarr.rule=(Host(`prowlarr.${HOSTNAME}`))
      - traefik.http.routers.prowlarr.tls=true
      - traefik.http.services.prowlarr.tls.certresolver=cloudflare
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:libtorrentv1
    container_name: qbittorrent
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent:/config
      - ${DOWNLOAD_ROOT}:/data/torrents
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbittorrent.entrypoints=web,websecure
      - traefik.http.routers.qbittorrent.rule=(Host(`qbittorrent.${HOSTNAME}`))
      - traefik.http.routers.qbittorrent.tls=true
      - traefik.http.routers.qbittorrent.tls.certresolver=cloudflare
      - traefik.http.services.qbittorrent.loadbalancer.server.port=8080
      - traefik.http.routers.qbittorrent.middlewares=qbittorrent-strip-slash,qbittorrent-stripprefix
      # https://github.com/qbittorrent/qBittorrent/issues/5693#issuecomment-552146296
      - traefik.http.middlewares.qbittorrent-stripprefix.stripPrefix.prefixes=/qbittorrent
      # https://community.traefik.io/t/middleware-to-add-the-if-needed/1895/19
      - traefik.http.middlewares.qbittorrent-strip-slash.redirectregex.regex=(^.*\/qbittorrent$$)
      - traefik.http.middlewares.qbittorrent-strip-slash.redirectregex.replacement=$$1/
      - traefik.http.middlewares.qbittorrent-strip-slash.redirectregex.permanent=false
  plex:
      image: lscr.io/linuxserver/plex:latest
      container_name: plex
      ports:
        - 32400:32400/tcp
        - 32400:32400/udp
        - 3005:3005/tcp
        - 8324:8324/tcp
        - 32469:32469/tcp
        - 1900:1900/udp
        - 32410:32410/udp
        - 32412:32412/udp
        - 32413:32413/udp
        - 32414:32414/udp
      hostname: plex
      environment:
        - PUID=${USER_ID}
        - PGID=${GROUP_ID}
        - TZ=Europe/Madrid
        - VERSION=docker 
        - PLEX_CLAIM=${PLEX_CLAIM}  
      volumes:
        - ./plex/config:/config
        - ${DATA_ROOT}:/data
        - ${DATA_STORAGE}:/storage 
        - ./plex/trasncode:/transcode
      restart: unless-stopped
      labels:
        - gpus=all
        - traefik.enable=true
        - traefik.http.routers.plex.entrypoints=web,websecure
        - traefik.http.routers.plex.rule=(Host(`plex-v2.${HOSTNAME}`))
        - traefik.http.routers.plex.tls.certresolver=cloudflare
        - traefik.http.services.plex.loadbalancer.server.port=32400
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    environment:
      - WATCHTOWER_CLEANUP=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - 127.0.0.1:2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    restart: unless-stopped

networks:
  default:
    name: nas-proxy
  nas-proxy-external:
    name: nas-proxy-external
    external: true
